public class Solution {
    public double pow(double x, int n) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        double res = 1.0;
        if(doubleEqual(x,0.0)) return 0.0;
        else if(doubleEqual(x,1.0)) return 1.0;
        else if(doubleEqual(x,-1.0)){
            if((n&0x1)==0) return 1.0;
            else return -1.0;
        }
        
        if(n==0) return 1;
        else if(n>0) return powCore(x,n);
        else return 1.0/powCore(x,Math.abs(n));
    }
    
    public boolean doubleEqual(double a,double b){
        double diff = a-b;
        if(diff>-0.0000000001 && diff<0.000000001) return true;
        return false;
    }
    
    public double powCore(double x,int n){
        double res = 1.0;
        for(int i=0;i<n;i++){
            res = res * x;
            if(doubleEqual(res,0.0)) return 0.0;
        }
        return res;
    }
}
